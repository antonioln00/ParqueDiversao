// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ParqueDiversao.Context;

#nullable disable

namespace ParqueDiversao.Persistence.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ParqueDiversao.Entities.Atracao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Ativa")
                        .HasColumnType("bit");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Preco")
                        .HasPrecision(18, 5)
                        .HasColumnType("decimal(18,5)");

                    b.Property<int>("SetorId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UltimaManutencao")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("SetorId");

                    b.ToTable("Atracoes");
                });

            modelBuilder.Entity("ParqueDiversao.Entities.Barraquinha", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal?>("Custo")
                        .HasPrecision(18, 5)
                        .HasColumnType("decimal(18,5)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SetorId")
                        .HasColumnType("int");

                    b.Property<decimal?>("ValorObtido")
                        .HasPrecision(18, 5)
                        .HasColumnType("decimal(18,5)");

                    b.HasKey("Id");

                    b.HasIndex("SetorId");

                    b.ToTable("Barraquinhas");
                });

            modelBuilder.Entity("ParqueDiversao.Entities.InfoAtracao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AtracaoId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Custo")
                        .HasPrecision(18, 5)
                        .HasColumnType("decimal(18,5)");

                    b.Property<int?>("EntradasVendidas")
                        .HasColumnType("int");

                    b.Property<decimal?>("ValorObtido")
                        .HasPrecision(18, 5)
                        .HasColumnType("decimal(18,5)");

                    b.HasKey("Id");

                    b.HasIndex("AtracaoId")
                        .IsUnique();

                    b.ToTable("InfosAtracao");
                });

            modelBuilder.Entity("ParqueDiversao.Entities.Setor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal?>("LucroTotal")
                        .HasPrecision(18, 5)
                        .HasColumnType("decimal(18,5)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("QtdAtracoes")
                        .HasColumnType("int");

                    b.Property<int?>("QtdAtracoesAtivas")
                        .HasColumnType("int");

                    b.Property<int?>("QtdAtracoesQuebradas")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Setores");
                });

            modelBuilder.Entity("ParqueDiversao.Entities.Atracao", b =>
                {
                    b.HasOne("ParqueDiversao.Entities.Setor", "Setor")
                        .WithMany("Atracoes")
                        .HasForeignKey("SetorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Setor");
                });

            modelBuilder.Entity("ParqueDiversao.Entities.Barraquinha", b =>
                {
                    b.HasOne("ParqueDiversao.Entities.Setor", "Setor")
                        .WithMany("Barraquinhas")
                        .HasForeignKey("SetorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Setor");
                });

            modelBuilder.Entity("ParqueDiversao.Entities.InfoAtracao", b =>
                {
                    b.HasOne("ParqueDiversao.Entities.Atracao", "Atracao")
                        .WithOne("InfoAtracao")
                        .HasForeignKey("ParqueDiversao.Entities.InfoAtracao", "AtracaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Atracao");
                });

            modelBuilder.Entity("ParqueDiversao.Entities.Atracao", b =>
                {
                    b.Navigation("InfoAtracao");
                });

            modelBuilder.Entity("ParqueDiversao.Entities.Setor", b =>
                {
                    b.Navigation("Atracoes");

                    b.Navigation("Barraquinhas");
                });
#pragma warning restore 612, 618
        }
    }
}
